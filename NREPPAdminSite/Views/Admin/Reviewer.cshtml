@model NREPPAdminSite.Models.RegisterViewModel
@{
    ViewBag.Title = "Add/Edit Reviewer";
}

<h2>@ViewBag.Title</h2>

<div class="container-fluid">

    @using (Html.BeginForm("SaveReviewer", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" , id="frmReviewerEdit"}))
    {

    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", autofocus = "autofocus", placeholder = "User Name" })
                    @Html.HiddenFor(m => m.Id, new { @class = "" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new {@class = "col-sm-3 control-label"})
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Email"})
                </div>
            </div>
        </div>
        @if (Model.Id == null)
        {
            <div class='col-sm-6'>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmEmail, new {@class = "col-sm-3 control-label"})
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.ConfirmEmail, new {@class = "form-control", placeholder = "Confirm Email"})
                    </div>
                </div>
            </div>
        }
    </div>
    <div class='row'>
    @if(Model.Id == null)
    {
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new {@class = "col-sm-3 control-label"})
                <div class="col-sm-9">
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password"})
                </div>
            </div>
        </div>

        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-sm-3 control-label"})
                <div class="col-sm-9">
                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", placeholder = "Confirm Password"})
                </div>
            </div>
        </div>
    }
    </div>
    <div class='row'>
    <div class='col-sm-6'>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
            </div>
        </div>
    </div>
    <div class='col-sm-6'>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
            </div>
        </div>
    </div>
</div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.Degree, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Degree, new { @class = "form-control", placeholder = "Degree" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.ReviewerType, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.ReviewerType, new { @class = "form-control", placeholder = "Reviewer Type" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeAddressLine1, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.HomeAddressLine1, new { @class = "form-control", placeholder = "Address Line 1" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeAddressLine2, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.HomeAddressLine2, new { @class = "form-control", placeholder = "Address Line 2" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeCity, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.HomeCity, new { @class = "form-control", placeholder = "City" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeState, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.HomeState, new { @class = "form-control", placeholder = "State" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeZip, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.HomeZip, new { @class = "form-control", placeholder = "Zip" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Phone Number" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.FaxNumber, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.FaxNumber, new { @class = "form-control", placeholder = "Fax Number" })
                </div>
            </div>
        </div>
    </div>
    <div class="row voffset3">
        <h3>Professional Information:</h3>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.Employer, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Employer, new { @class = "form-control", placeholder = "Employer" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.Department, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Department, new { @class = "form-control", placeholder = "Department" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkAddressLine1, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkAddressLine1, new { @class = "form-control", placeholder = "Address Line 1" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkAddressLine2, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkAddressLine2, new { @class = "form-control", placeholder = "Address Line 2" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkCity, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkCity, new { @class = "form-control", placeholder = "City" })

                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkState, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkState, new { @class = "form-control", placeholder = "State" })

                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkZip, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkZip, new { @class = "form-control", placeholder = "Zip" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkEmail, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkEmail, new { @class = "form-control", placeholder = "Email" })
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkPhoneNumber, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkPhoneNumber, new { @class = "form-control", placeholder = "Phone Number" })
                </div>
            </div>
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.WorkFaxNumber, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.WorkFaxNumber, new { @class = "form-control", placeholder = "Fax Number" })
                </div>
            </div>
        </div>

    </div>
    <div class='row'>
        <div class='col-sm-12'>
            <div class="form-group">
                @Html.LabelFor(m => m.ExperienceSummary, new {@class = "col-sm-3 control-label"})
                <div class="col-sm-9">
                    @Html.TextAreaFor(model => model.ExperienceSummary, new {@class = "form-control", placeholder = "Experience Summary", cols = 40, @rows = 3})
                </div>
            </div>
        </div>
    </div>
    <div class='row'>
        <div class='col-sm-6'>
            <span style="font-size: large; font-weight: bold;">Upload Contract Agreement: </span><input type="file" name="fileCa" />
        </div>
        <div class='col-sm-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.ContractEndDate, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ContractEndDate)
                </div>
            </div>
        </div>
    </div>


    <div class="col-sm-offset-3 col-sm-9">
        <input type="submit" value="Save" class="btn btn-primary" />
        <input type="submit" value="Cancel" class="btn btn-default" data-dismiss="modal" aria-hidden="true" />
    </div>
    }

</div>

<script>
    $(".validation-summary-errors").removeClass("validation-summary-errors");
    $(".input-validation-error").removeClass("input-validation-error").parent().addClass("has-error");
    $.validator.setDefaults({
        showErrors: function (errorMap, errorList) {
            this.defaultShowErrors();

            // If an element is valid, it doesn't need a tooltip
            $("." + this.settings.validClass).tooltip("destroy");

            // Add tooltips
            for (var i = 0; i < errorList.length; i++) {
                var error = errorList[i];
                $(error.element).tooltip({ trigger: "focus" }) // Activate the tooltip on focus
                                .attr("data-original-title", error.message);
            }
        }
    });
</script>