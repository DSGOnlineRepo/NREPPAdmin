@model NREPPAdminSite.Models.ConsensusModel

@section scripts {
    <script type="text/javascript" src="@Url.Content("/Scripts/chosen.jquery.min.js")"></script>
}

<style>
    td.InDispute {
        color: red;
        text-align: right;
        font-weight: bold;
    }
</style>



@{
    ViewBag.Title = "Consensus";
    Layout = "~/Views/Shared/_Layout.cshtml";

    NREPPAdminSite.Models.QoRAnswer ans1 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans2 = new NREPPAdminSite.Models.QoRAnswer();

    ans1.TaxOutcomeName = ans2.TaxOutcomeName = "Co-occurring/ dual disorders";
    ans1.AnswerTypeName = ans2.AnswerTypeName = "Rigor Score";
    ans1.StudyId = ans2.StudyId = 1;
    ans1.FixedAnswer = ans1.CalcAnswer = "2.35";
    ans2.FixedAnswer = ans2.CalcAnswer = "2.34";
    ans1.ReviewerName = "Patrick";
    ans2.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans3 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans4 = new NREPPAdminSite.Models.QoRAnswer();

    ans3.TaxOutcomeName = ans4.TaxOutcomeName = "Co-occurring/ dual disorders";
    ans3.AnswerTypeName = ans4.AnswerTypeName = "Rigor Score";
    ans3.StudyId = ans4.StudyId = 2;
    ans3.FixedAnswer = ans3.CalcAnswer = "2.35";
    ans4.FixedAnswer = ans4.CalcAnswer = "2.35";
    ans3.ReviewerName = "Patrick";
    ans4.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans5 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans6 = new NREPPAdminSite.Models.QoRAnswer();

    ans5.TaxOutcomeName = ans6.TaxOutcomeName = "Co-occurring/ dual disorders";
    ans5.AnswerTypeName = ans6.AnswerTypeName = "Effect";
    ans5.StudyId = ans6.StudyId = 1;
    ans5.FixedAnswer = ans5.CalcAnswer = "Positive";
    ans6.FixedAnswer = ans6.CalcAnswer = "Negative";
    ans5.ReviewerName = "Patrick";
    ans6.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans7 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans8 = new NREPPAdminSite.Models.QoRAnswer();

    ans7.TaxOutcomeName = ans8.TaxOutcomeName = "Co-occurring/ dual disorders";
    ans7.AnswerTypeName = ans8.AnswerTypeName = "Effect";
    ans7.StudyId = ans8.StudyId = 2;
    ans7.FixedAnswer = ans7.CalcAnswer = "Positive";
    ans8.FixedAnswer = "Positive";
    ans8.CalcAnswer = "Negative";
    ans7.ReviewerName = "Patrick";
    ans8.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans9 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans10 = new NREPPAdminSite.Models.QoRAnswer();

    ans9.AnswerTypeName = ans10.AnswerTypeName = "Fidelity";
    ans9.StudyId = ans10.StudyId = 1;
    ans9.FixedAnswer = ans9.CalcAnswer = "1";
    ans10.FixedAnswer = ans10.CalcAnswer = "1";
    ans9.ReviewerName = "Patrick";
    ans10.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans11 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans12 = new NREPPAdminSite.Models.QoRAnswer();

    ans11.AnswerTypeName = ans12.AnswerTypeName = "Fidelity";
    ans11.StudyId = ans12.StudyId = 1;
    ans11.FixedAnswer = ans11.CalcAnswer = "1";
    ans12.FixedAnswer = ans12.CalcAnswer = "0";
    ans11.ReviewerName = "Patrick";
    ans12.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans13 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans14 = new NREPPAdminSite.Models.QoRAnswer();

    ans13.AnswerTypeName = ans14.AnswerTypeName = "Rigor Score";
    ans13.TaxOutcomeName = ans14.TaxOutcomeName = "Obsessive-compulsive disorders/ symptoms";
    ans13.StudyId = ans14.StudyId = 1;
    ans13.FixedAnswer = ans13.CalcAnswer = "1.26";
    ans14.FixedAnswer = ans14.CalcAnswer = "1.26";
    ans13.ReviewerName = "Patrick";
    ans14.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans15 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans16 = new NREPPAdminSite.Models.QoRAnswer();

    ans15.TaxOutcomeName = ans16.TaxOutcomeName = "Obsessive-compulsive disorders/ symptoms";
    ans15.AnswerTypeName = ans16.AnswerTypeName = "Effect";
    ans15.StudyId = ans16.StudyId = 1;
    ans15.FixedAnswer = ans15.CalcAnswer = "Positive";
    ans16.FixedAnswer = ans16.CalcAnswer = "Positive";
    ans15.ReviewerName = "Patrick";
    ans16.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans17 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans18 = new NREPPAdminSite.Models.QoRAnswer();

    ans17.AnswerTypeName = ans18.AnswerTypeName = "Fidelity";
    ans17.StudyId = ans18.StudyId = 1;
    ans17.FixedAnswer = ans17.CalcAnswer = "1";
    ans18.FixedAnswer = ans18.CalcAnswer = "1";
    ans17.ReviewerName = "Patrick";
    ans18.ReviewerName = "Prentice";


    NREPPAdminSite.Models.QoRAnswer ans19 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans20 = new NREPPAdminSite.Models.QoRAnswer();

    ans19.AnswerTypeName = ans20.AnswerTypeName = "Rigor Score";
    ans19.TaxOutcomeName = ans20.TaxOutcomeName = "Obsessive-compulsive disorders/ symptoms";
    ans19.StudyId = ans20.StudyId = 2;
    ans19.FixedAnswer = ans19.CalcAnswer = "1.26";
    ans20.FixedAnswer = ans20.CalcAnswer = "1.26";
    ans19.ReviewerName = "Patrick";
    ans20.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans21 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans22 = new NREPPAdminSite.Models.QoRAnswer();

    ans21.TaxOutcomeName = ans22.TaxOutcomeName = "Obsessive-compulsive disorders/ symptoms";
    ans21.AnswerTypeName = ans22.AnswerTypeName = "Effect";
    ans21.StudyId = ans22.StudyId = 2;
    ans21.FixedAnswer = ans21.CalcAnswer = "Positive";
    ans22.FixedAnswer = ans22.CalcAnswer = "Positive";
    ans21.ReviewerName = "Patrick";
    ans22.ReviewerName = "Prentice";

    NREPPAdminSite.Models.QoRAnswer ans23 = new NREPPAdminSite.Models.QoRAnswer();
    NREPPAdminSite.Models.QoRAnswer ans24 = new NREPPAdminSite.Models.QoRAnswer();

    ans23.AnswerTypeName = ans24.AnswerTypeName = "Fidelity";
    ans23.StudyId = ans24.StudyId = 2;
    ans23.FixedAnswer = ans23.CalcAnswer = "1";
    ans24.FixedAnswer = ans24.CalcAnswer = "0";
    ans23.ReviewerName = "Patrick";
    ans24.ReviewerName = "Prentice";
}

@using NREPPAdminSite

<h2>Consensus</h2>

<button id="toggleButton" data-state="Hide">Show In Dispute Only</button>
<div>
    <table id="consensusTable">
        <tr>
            <th style="border: 1px solid; padding-left: 2px; padding-right: 2px;">Reported Effect</th>
            <th style="border: 1px solid; padding-left: 2px; padding-right: 2px;">Study Id</th>
            <th style="border: 1px solid; padding-left: 2px; padding-right: 2px;">Taxonomy Outcome</th>
            @foreach (NREPPAdminSite.Models.QoRAnswerType aType in Model.AnswerTypes)
            {
                <th colspan="2" style="border: 1px solid; padding-left: 2px; padding-right: 2px;">
                    @aType.TypeName
                </th>
            }
            <th><input type="checkbox" name="selectAll" /></th>
        </tr>
        <tr>
            <th> </th>
            <th> </th>
            <th> </th>
            @foreach (NREPPAdminSite.Models.QoRAnswerType aType in Model.AnswerTypes)
            {
                <th style="border: 1px solid; padding-left: 2px; padding-right: 2px;">@Model.AnswerList.ElementAt(0).ReviewerName</th>
                <th style="border: 1px solid; padding-left: 2px; padding-right: 2px;">@Model.AnswerList.ElementAt(1).ReviewerName</th>
            }
        </tr>
        @foreach (var OutcomeGroup in Model.AnswerList.GroupBy(x => x.OutcomeName))
        {
            foreach (var StudyGroup in OutcomeGroup.Where(s => s.OutcomeName == OutcomeGroup.Key).GroupBy(x => x.StudyId))
            { 
                <tr>
                    <td style="border: 1px solid; padding-left: 2px; padding-right: 2px;">@OutcomeGroup.Key</td>
                    <td style="border: 1px solid; padding-left: 2px; padding-right: 2px;">@StudyGroup.Key</td>
                    <td style="border: 1px solid; padding-left: 2px; padding-right: 2px;">@OutcomeGroup.ToList()[0].TaxOutcomeName</td>
                    @foreach (var AnswerGroup in StudyGroup.Where(x => x.StudyId == StudyGroup.Key).GroupBy(s => s.AnswerTypeId))
                    {
                        NREPPAdminSite.Models.QoRAnswer one = AnswerGroup.ToList()[0];
                        NREPPAdminSite.Models.QoRAnswer two = AnswerGroup.ToList()[1];
                        @NREPPHtml.CompareBlock2(one, two, Model.AnswerTypes.Where(x => x.Id == one.AnswerTypeId).Select(y => y.Comparison).First())
                    }
                    <td><input type="checkbox" name="selectme" /></td>
                </tr>
            }
        }
    </table>
    <br /><br />
</div>

<div>
    <button onclick="GenEmail(); return false;">Generate Email</button>
    <button>Mark Consensus As Complete</button>
</div>

<div id="dumpingGround">
    <table id="resultsTable"></table>
</div>

<script type="text/javascript">
    var TableList = new Array();
    function GetRow(inCrtl) {
        var td = $(inCrtl).parent();
        var innerHTML = $(td).parent("tr").html();
        var ignoreme = /\<td\>\<input type="checkbox"\s/;
        var location = innerHTML.search(ignoreme);

        return "<tr>" + innerHTML.substring(0, location) + "</tr>";
    }

    $.fn.exists = function() {
        return this.length !== 0;
    }

    function testFunc() {
        alert(GetRow("#thisButton"));
    }

    function GenEmail() {
        //TableList.push("<tr>" + $($("#consensusTable tr")[0]).html() + "</tr>");

        var firstRowHtml = $($("#consensusTable tr")[0]).html();
        var ignoreme = /\<th\>\<input type="checkbox"\s/;
        var ignoreLocation = firstRowHtml.search(ignoreme);
        TableList.push("<tr>" + firstRowHtml.substring(0, ignoreLocation) + "</tr>");

        TableList.push("<tr>" + $($("#consensusTable tr")[1]).html() + "</tr>");

        $("input[name*='selectme']").each(function () {
            if (this.checked)
                TableList.push(GetRow(this));
        });

        if (TableList.length > 2)
            $("#resultsTable").html(TableList.join(""));
        TableList = [];
    }

    function DoCompare(val1, val2, compareString) {
        return eval(compareString);
    }

    function ToggleAgreed() {
        //$("td[data-formula]").parent().children(".InDispute").parent()
        $("td[data-formula]").parent().each(function () {
            if ($(this).children(".InDispute").exists() == false)
                $(this).toggle();
        })
    }

    $(document).ready(function () {
        var ListOfItems = Array();
        var dumpText = "";
        var val1temp = 0.0;
        var val2temp = 0.0;
        var uFormula = "";
        var InDispute = false;

        $("#toggleButton").click(function () {
            ToggleAgreed();

            if ($(this).attr("data-state") == "Hide") {
                $(this).text("Show All");
                $(this).attr("data-state", "Show");
            } else {
                $(this).text("Show In Dispute Only");
                $(this).attr("data-state", "Hide");
            }

            return false;
        });

        $("input[name*='selectAll']").click(function () {
            if (this.checked)
            {
                $("input[name*='selectme']").each(function () {
                    $(this).prop("checked", true);
                });
            } else {
                $("input[name*='selectme']").each(function () {
                    $(this).prop("checked", false);
                });
            }
        });

        @foreach (var ans in Model.AnswerList.GroupBy(x => x.IdString()).Distinct())
        {
        <text>
        dumpText += $("td[name*=@ans.Key]")[0].innerText + " " + $("td[name*=@ans.Key]")[1].innerText + " | ";

        val1temp = parseFloat($("td[name*=@ans.Key]")[0].innerText);
        val2temp = parseFloat($("td[name*=@ans.Key]")[1].innerText);
        uFormula = $("td[name*=@ans.Key]").attr("data-formula");

        InDispute = DoCompare(val1temp, val2temp, uFormula);

        $("td[name*=@ans.Key]").each(function () {
            if (InDispute == false)
                $(this).addClass("InDispute");
        });

        </text>
        }

        /*var someText = "";
        $("td[name*='1']").each(function () {
            someText += $(this).attr("data-formula");
        });*/
    });
</script>

