@model NREPPAdminSite.Models.ScreeningModel

@{
    ViewBag.Title = "Screen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("/Scripts/screenTool.js")"></script>
    <script type="text/javascript" src="@Url.Content("/Scripts/chosen.jquery.min.js")"></script>
}

<h2>Screening tool for @Model.TheIntervention.Title</h2>

<div style="margin-bottom: 10px; border: 1px solid;">
    <h3>Available Documents</h3>

    @{
        int i = 0;
    }
    <table>
        <tr>
            <th class="withborder">Description</th>
            <th class="withborder">RC File Name</th>
            <th class="withborder">Reference</th>
            <th class="withborder">Publication Year</th>
            <th class="withborder"> </th>
        </tr>
        @using (Html.BeginForm("UpdateRCDocs", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.Hidden("InterventionId", @Model.TheIntervention.Id)
            
            foreach (NREPPAdminSite.Models.RCDocument doc in Model.TheDocuments)
            {
                <tr>
                    <td class="withborder">
                        @Html.Hidden("hid_" + i.ToString(), @doc.DocId)
                        @Html.Hidden("isdirty_" + i .ToString(), "false")
                        @doc.FileDescription
                    </td>
                    <td class="withborder">
                        @doc.RCName
                        @Html.TextBox("txtRCName_" + i.ToString(), @doc.RCName, new { @class = "hidden" })
                    </td>
                    <td class="withborder">
                        @doc.Reference
                        @Html.TextArea("txtRef_" + i.ToString(), @doc.Reference, new { @class = "hidden" })
                    </td>
                    <td class="withborder">
                        @doc.PubYear
                        @Html.TextBox("txtPubYear_" + i.ToString(), @doc.PubYear, new { @class = "hidden" })
                    </td>
                    <td class="withborder">
                        <button name="btnEdit" onclick="setEdit(@i); return false;">Edit</button>
                        <button name="cancel_@i" class="hidden" onclick="clearEdit(@i); return false;">Cancel</button>
                        <input type="submit" value="Save" class="hidden" />
                    </td>
                </tr>
                i++;
            }
        }
    </table>
</div>

<div>
    @{i = 0; }

    @functions{
        string getReference(List<NREPPAdminSite.Models.RCDocument> docs, int inDocId)
        {
            //string outRef = "";

            foreach (NREPPAdminSite.Models.RCDocument d in docs)
                if (d.DocId == inDocId)
                    return d.Reference;

            return "Error";
        }
    }

    <table style="border: 1px solid;">
        <tr>
            <th class="withborder" style="text-align: center;">Reference</th>
            <th class="withborder" style="text-align: center;">Notes</th>
            <th>Study Id</th>
            <th> </th>
        </tr>
        @foreach (NREPPAdminSite.Models.Study study in Model.StudyDocuments)
        {
            <tr>
                <td class="withborder"><a href="#" onclick="populateStudyForm(@i)">@getReference(Model.TheDocuments.ToList(), @study.DocumentId)</a></td>
                <td class="withborder">@study.Notes</td>
                <td class="withborder">Study @study.StudyId</td>
                <td class="withborder">@Html.ActionLink("Delete", "DeleteStudyRecord", new { RecId = study.Id, InvId = Model.TheIntervention.Id })</td>
            </tr>
            
            i++;
        }
    </table>
</div>

@{
    List<SelectListItem> StudyDesigns = new List<SelectListItem>();
    List<SelectListItem> YPYN = new List<SelectListItem>();
    List<SelectListItem> Exclusions = new List<SelectListItem>();
    List<SelectListItem> Docs = new List<SelectListItem>();

    foreach (NREPPAdminSite.Models.Answer ans in Model.StudyDesigns)
    {
        StudyDesigns.Add(new SelectListItem() { Text = ans.ShortAnswer, Value = ans.AnswerId.ToString() });
    }

    foreach (NREPPAdminSite.Models.Answer ans in Model.YPYN)
    {
        YPYN.Add(new SelectListItem() { Text = ans.ShortAnswer, Value = ans.AnswerId.ToString() });
    }
    
    foreach (NREPPAdminSite.Models.Answer ans in Model.Exclusions)
    {
        Exclusions.Add(new SelectListItem() { Text = ans.ShortAnswer, Value = ans.AnswerId.ToString() });
    }

    foreach (NREPPAdminSite.Models.RCDocument doc in Model.TheDocuments)
    {
        Docs.Add(new SelectListItem() { Text = doc.FileDescription, Value = doc.DocId.ToString() });
    }
}

<div style="padding-top: 10px; padding-bottom: 10px;">
    @using (Html.BeginForm("AddStudy", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.Hidden("InterventionId", @Model.TheIntervention.Id)
        @Html.Hidden("ActualId");
        <label for="studyIdBox">Study ID:</label><input type="text" name="StudyId" /><br />
        <label for="docDropdown">Article:</label>
      
        @Html.DropDownList("docDropdown", Docs);
            <br />
        
        <input type="checkbox" name="IsLitSearch" /><label style="margin-left: 2px;">Was this part of a Literature Search?</label> <br />
        <input type="checkbox" name="useMulitvariate" /><label style="margin-left: 2px;">Evaluation Employs a Multivariate Analysis</label> <br />

        <label>What was the Study Design?</label>
        @Html.DropDownList("StudyDesign", StudyDesigns)<br /><br />

        <label>SAMSHA-related Population?</label>
        @Html.DropDownList("SAMSHARelated", YPYN)<br />

        <div>
            <span style="width: 100%; clear: both; float: left;">Exclusions:</span>
            <span style="float: left; clear: left;">Exclusion 1</span>@Html.DropDownList("Exclusion1", Exclusions)<br />
            <span style="float: left; clear: left;">Exclusion 2</span>@Html.DropDownList("Exclusion2", Exclusions)<br />
            <span style="float: left; clear: left;">Exclusion 3</span>@Html.DropDownList("Exclusion3", Exclusions)<br />
            <br />
        </div>

        <label>Describe The Baseline Equivalence Measure:</label><br />
        <textarea name="BaselineEquiv"></textarea><br />

        <label>Notes:</label><br />
        <textarea name="Notes"></textarea><br />

        <br /><br />
        <input type="submit" value="Submit" /> <button onclick="return false;">Clear</button>
    }
</div>

<div>
    <h2>Add an Outcome</h2>

    @{
        List<SelectListItem> OutcomeList = new List<SelectListItem>();
        
        foreach (NREPPAdminSite.Models.Outcome outcome in Model.Outcomes.MacroOutcomes)
        {
            OutcomeList.Add(new SelectListItem() { Text = outcome.OutcomeName, Value = outcome.Id.ToString() });
        }

        OutcomeList.Add(new SelectListItem() { Text = "New Outcome", Value = "-1" });

        List<int> studyz = Model.StudyDocuments.Select(m => m.StudyId).Distinct().ToList();

        i = 0;
    }

    @functions {
        string getOutcomeByNumber(int inNumber, List<SelectListItem> inList)
        {
            foreach (SelectListItem i in inList)
                if (i.Value == inNumber.ToString())
                    return i.Text;

            return "Error";
        }
        
       
    }

    <table>
        <tr>
            <th class="withborder" style="text-align: center;">Outcome</th>
            <th class="withborder" style="text-align: center;">Measure</th>
            <th>Study Id</th>
            <th> </th>
        </tr>
        @foreach (NREPPAdminSite.Models.OutcomeMeasure measure in Model.Outcomes.OutcomesMeasures)
        {
            <tr>
                <td class="withborder"><a href="#" onclick="populateOutcomeForm(@i); return false;">@getOutcomeByNumber(@measure.OutcomeId, OutcomeList)</a></td>
                <td class="withborder">@measure.OutcomeMeasureName</td>
                <td class="withborder">Study @measure.StudyId</td>
                <td class="withborder">@Html.ActionLink("Delete", "DeleteOutcomeMeasure", new { MeasureId = measure.Id, InvId = Model.TheIntervention.Id })</td>
            </tr>

            i++;
        }
    </table>
    <div style="padding: 10px 10px 10px 10px; border: 1px solid;">
        @using (Html.BeginForm("AddOutcome", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.Hidden("IntervId", Model.TheIntervention.Id)
            @Html.Hidden("OutcomeMeasureId")
            <label>Choose An Outcome: </label>
            @Html.DropDownList("MacroOutcome", OutcomeList)
        
            <label>Write in: </label><input type="text" name="newOutcome" /><br /><br />
            <label for="measure">Measure Reported in the Study</label>
            <input type="text" id="measure" name="measure" /><br /><br />
        
            <label>Document: </label>@Html.DropDownList("docDropdown", Docs)<br /><br />

            <label for="popDescription">Describe Evaluated Population:</label><br />
            <textarea name="popDescription" id="popDescription"></textarea><br /><br />
        
            <label for="studySelector">Select Applicable Studies</label><br />
            <select id="studySelector" name="studySelector" style="width: 350px;">
                @foreach(int studyId in studyz)
                {
                    <option value="@studyId">Study @studyId</option>
                }
            </select>
        
            <input type="submit" value="Submit" />
        }
    </div>

    @{
        List<SelectListItem> DestinationOpts = new List<SelectListItem>();

        foreach (NREPPAdminSite.Models.Destination dest in Model.TheDestinations)
        {
            DestinationOpts.Add(new SelectListItem() { Text = dest.UserName, Value = dest.UserId.ToString() + "," + dest.StatusId.ToString() });
        }
    }

    <div style="padding: 10px 10px 10px 10px; border: 1px solid;">
        @using (Html.BeginForm("ChangeStatus", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.Hidden("IntervId", Model.TheIntervention.Id)
            <label for="selDest">Destination:</label>
            @Html.DropDownList("selDest", DestinationOpts)<br />
            
            <input type="submit" value="Send" />
        }
    </div>
</div>

<script type="text/javascript">
    var thisIsAThing = 5;
    var currentStudy = new Array();
    var currentOutcomes = new Array();
    
    function makeRecord(Id, StudyId, Reference, inLitSearch, Exclusion1, Exclusion2, Exclusion3, StudyDesign, BaselineEquiv,
        UseMultivariate, SAMSHARelated, AuthorQueryNeeded, RecommendReview, Notes, DocumentId) {
        var anObject = {};

        anObject.Id = Id;
        anObject.StudyId = StudyId;
        anObject.Reference = Reference;
        anObject.inLitSearch = inLitSearch != "False";
        anObject.Exclusion1 = Exclusion1;
        anObject.Exclusion2 = Exclusion2;
        anObject.Exclusion3 = Exclusion3;
        anObject.StudyDesign = StudyDesign;
        anObject.BaselineEquiv = BaselineEquiv;
        anObject.UseMultivariate = UseMultivariate != "False";
        anObject.SAMSHARelated = SAMSHARelated;
        anObject.AuthorQueryNeeded = AuthorQueryNeeded != "False";
        anObject.RecommendReview = RecommendReview != "False";
        anObject.Notes = Notes;
        anObject.DocumentId = DocumentId;

        return anObject;
    }

    function makeOutcomeRecord(OutcomeId, StudyId, Measure, PopDescrip) {
        var anObject = {};

        anObject.Id = OutcomeId;
        anObject.StudyId = StudyId;
        anObject.Measure = Measure;
        anObject.PopDescrip = PopDescrip;

        return anObject;
    }

    @foreach(NREPPAdminSite.Models.Study item in Model.StudyDocuments)
    {
        @:currentStudy.push(makeRecord(@item.Id, @item.StudyId, '@item.Reference', "@item.inLitSearch", @item.Exclusion1, @item.Exclusion2, @item.Exclusion3, @item.StudyDesign, '@item.BaselineEquiv', "@item.UseMultivariate", @item.SAMSHARelated, "@item.AuthorQueryNeeded", "@item.RecommendReview", "@item.Notes", @item.DocumentId));
    }

    @foreach(NREPPAdminSite.Models.OutcomeMeasure om in Model.Outcomes.OutcomesMeasures)
    {
        @:currentOutcomes.push(makeOutcomeRecord(@om.Id, @om.StudyId, "@om.OutcomeMeasureName", "@om.PopDescription"));
    }


</script>

