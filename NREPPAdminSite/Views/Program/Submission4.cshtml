@model NREPPAdminSite.Models.IntervPageModel

@{
    ViewBag.Title = "Page 4 of Submission";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Page 4 of Submission @Model.TheIntervention.Title</h2>

@{
    List<SelectListItem> DocTypez = new List<SelectListItem>();

    foreach (NREPPAdminSite.Models.Answer ans in Model.DocumentType)
    {
        DocTypez.Add(new SelectListItem() { Text = ans.ShortAnswer, Value = ans.AnswerId.ToString() });
    }
}

<div style="height: 100px;">
    <span style="float: left; clear: left;">
        Last Updated On:
    </span>
    <span style="float: left; clear: right; margin-left: 5px;">@Model.TheIntervention.UpdatedDate.ToShortDateString()</span>

    <span style="float: left; clear: left;">
        Published On:
    </span>
    <span style="float: left; clear: right; margin-left: 5px;">@(Model.TheIntervention.PublishDate.HasValue ? Model.TheIntervention.PublishDate.GetValueOrDefault().ToShortDateString() : "Not Published")</span>
</div>

<div>
    <table style="border: 1px solid;">
        <tr>
            <!-- Header -->
            <th class="withborder" style="text-align: center;">Title</th>
            <th class="withborder" style="text-align: center;">Description</th>
            <th class="withborder" style="text-align: center;">Type</th>
            <th class="withborder" style="text-align: center;">&nbsp;</th>
        </tr>
        @foreach (NREPPAdminSite.Models.InterventionDoc doc in Model.Documents)
        {
            <tr>
                <td class="withborder">@Html.ActionLink(@doc.Title, "GetFile", "Admin", new { FileId = doc.DocId }, null)</td>
                <td class="withborder">@doc.FileDescription</td>
                <td class="withborder">@doc.DocumentTypeName</td>
                <td class="withborder">@Html.ActionLink("Delete", "DeleteDocument", new { InvId = Model.TheIntervention.Id, DocId = doc.DocId })</td>
            </tr>
        }
    </table>

</div>

<div>
@using (Html.BeginForm("Upload", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.TheIntervention.Id);
    @Html.HiddenFor(m => m.TheIntervention.SubmitterId);
    @Html.HiddenFor(m => m.TheIntervention.StatusId);
    @Html.HiddenFor(m => m.TheIntervention.ProgramType);
    @Html.Hidden("OnPage", "Sub4");


    if (Model.TheIntervention.StatusId == 1 && Model.CanDo("UploadDocs"))
    {
        <p>
            You may now upload key documents relevant to the review of your program. This includes  program evaluation (journal articles, evaluation reports), , dissemination materials, and other supporting documents.
        </p>
    <ul>
        <li><u>Program evaluation</u> materials include studies using an experimental or quasi-experimental design, with a comparison or control group (treatment as usual or no treatment, but not an alternative treatment) designed to assess the impact of the program on key outcomes.</li>
        <li><u>Dissemination materials</u>, though no longer required, are encouraged. These include manuals, curricula, quality assurance materials, training materials, activity props, and such. You may upload documents electronically. Note: You will have the option to list materials that cannot be submitted electronically.</li>
        <li><u>Other supporting</u> documents could include a more detailed description of your program, its conceptual framework or logic model, materials related to the reliability and validity of your measures, etc.</li>
        </ul>
            <span style="font-size: large; font-weight: bold;">Upload a File: </span><input type="file" name="UploadedFile" /> <br />
            <span>Document Title: </span><input type="text" name="FileTitle" />
            <span>Description:</span><br />
            <textarea name="FileDescription"></textarea>
            @Html.DropDownList("docTypeDD", DocTypez);
    <br /><br />
    <input type="submit" value="Attach" /> <input type="checkbox" /> <span>from Lit Search</span>
   }
}
    @Html.ActionLink("Edit Program Title and Type", "Submission2", new { InvId = Model.TheIntervention.Id})
    @Html.ActionLink("Continue With Submission", "Submission6", new { InvId = Model.TheIntervention.Id })
</div>