@model NREPPAdminSite.Models.IntervPageModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var NumDocs = Model.Documents.Count;
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("/Scripts/programview.js")"></script>
}

<h2>Viewing @Model.TheIntervention.Title</h2>
<h3>Submitted by @Model.TheIntervention.Submitter</h3>
<label>@Model.TheIntervention.Status</label><br />

@if (Model.TheIntervention.StatusId == 4)
{
    @Html.ActionLink("Screen this Intervention", "Screen", new { InterventionId = Model.TheIntervention.Id });
}
else if (Model.TheIntervention.StatusId == 5)
{
    @Html.ActionLink("View Screening Results", "ScreenResults", new { IntervId = Model.TheIntervention.Id });
}
<div>
    @if (Model.TheIntervention.Id < 0)
    {
        <div>
            <p>
                Welcome to the NREPP submission process. Our open submission period runs from @ViewBag.StartDate to @ViewBag.EndDate. You will be prompted for information required to submit an application for your program. If you are submitting more than one program, you will need to submit information about one program at a time.
            </p>
            <p>
                Your account allows you to initiate an application and save your work until you complete the submission.  After you have entered and uploaded all of the required information, you must press the Submit button for your application to be processed.
            </p>

            <p>
                For more information about the submission and review process, click here. Questions regarding your submission can be sent to nreppadmin@dsgonline.com. <b>All applications must be completed and submitted by @ViewBag.EndDate</b>.
            </p>
        </div>
    }

    <div>

        @{
            List<SelectListItem> DocTypez = new List<SelectListItem>();

            foreach (NREPPAdminSite.Models.Answer ans in Model.DocumentType)
            {
                DocTypez.Add(new SelectListItem() { Text = ans.ShortAnswer, Value = ans.AnswerId.ToString() });
            }
        }

        @if (Model.CanDo("UserPreScreen")) // Only show these to the submitter during the initial submission
        {
            int maskTotal = 0;
            string warnClass = "prescreenWarnDiv";

            foreach (NREPPAdminSite.Models.MaskValue mask in Model.UserPreScreen)
            {
                bool isChecked = mask.Selected;
                string maskString = string.Format("{0}. {1}", mask.Value, mask.Name);
                maskTotal += mask.Selected ? (int)Math.Pow(2, mask.Value) : 0;


                //@Html.CheckBox(mask.Name, isChecked, new { Value = Math.Pow(2, mask.Value), @class = "userPreScreenMask" }) @mask.Name <br />
                if (mask.Value > 2)
                {
                    <span class="preQuestion_@mask.Value.ToString()">
                        <span>@maskString</span> @Html.RadioButton(mask.Name, Math.Pow(2, mask.Value), isChecked, new { @class = "userPreScreenMask" })<span>Yes</span>
                        @Html.RadioButton(mask.Name, 0, !isChecked, new { @class = "userPreScreenMask" })<span>No.</span><br />
                    </span>
                }
                else
                {
                    <span class="preQuestion_@mask.Value.ToString()">
                        <span>@maskString</span> @Html.RadioButton(mask.Name, Math.Pow(2, mask.Value), isChecked, new { @class = "userPreScreenMask" })<span>Yes</span>
                        @Html.RadioButton(mask.Name, 0, !isChecked, new { @class = "userPreScreenMask" })<span>No.</span><br />
                    </span>
                }

            }

            if (maskTotal == 10 || maskTotal == 18 || maskTotal == 12 || maskTotal == 20)
            {
                warnClass += " hidden";
            }
            <div class="@warnClass">
                If you have not answered "Yes" to questions 1 or 2 AND "Yes" to either question 3 or 4 or your submission will be rejected during pre-screening.
            </div>

        }
    </div>

    @{
        string formContentClass = Model.TheIntervention.Id > 0 ? "formContent" : "formContent hidden";
        int i = 0;
    }

    <div class="@formContentClass">
        @if (!Model.CanDo("EditBaseSubmission"))
        {

            <div style="height: 100px;">
                <span style="float: left; clear: left;">
                    Last Updated On:
                </span>
                <span style="float: left; clear: right; margin-left: 5px;">@Model.TheIntervention.UpdatedDate.ToShortDateString()</span>

                <span style="float: left; clear: left;">
                    Published On:
                </span>
                <span style="float: left; clear: right; margin-left: 5px;">@(Model.TheIntervention.PublishDate.HasValue ? Model.TheIntervention.PublishDate.GetValueOrDefault().ToShortDateString() : "Not Published")</span>

                <div class="description">
                    <span style="float: left;">@Model.TheIntervention.FullDescription</span>
                </div>
            </div>

        }
        else
        {

            <div class="mainForm">
                @using (Html.BeginForm("Edit", "Program"))
                {
                    @Html.HiddenFor(m => m.TheIntervention.Id);
                    @Html.HiddenFor(m => m.TheIntervention.SubmitterId);
                    @Html.HiddenFor(m => m.TheIntervention.StatusId);
                    @Html.HiddenFor(m => m.TheIntervention.ProgramType, new { Id = "programType" });
                    @Html.HiddenFor(m => m.TheIntervention.UserPreScreenMask, new { Id = "userPreScreenAns" })

                    @Html.LabelFor(m => m.TheIntervention.Title, new { style = "margin-right: 5px;" });
                    @Html.TextBoxFor(m => m.TheIntervention.Title);<br />

                    @Html.LabelFor(m => m.TheIntervention.Acronym, new { style = "margin-right: 5px;" });
                    @Html.TextBoxFor(m => m.TheIntervention.Acronym);
                    <br /><br />

                    @Html.LabelFor(m => m.TheIntervention.FullDescription);
                    <br />
                    @Html.TextAreaFor(m => m.TheIntervention.FullDescription, new { cols = "150", rows = "5" }) ;
                    <br /><br />

                    foreach (NREPPAdminSite.Models.MaskValue mask in Model.ProgramType)
                    {
                        bool isChecked = mask.Selected;
                        @Html.CheckBox(mask.Name, isChecked, new { Value = Math.Pow(2, mask.Value), @class = "programMask" }) @mask.Name <br />
                    }
                    <br /><br />

                    <input type="submit" value="Update" />
                }
            </div>
        }

        @if (Model.TheIntervention.Id > 0)
        {
        <!-- include logic for uploading at the same time as saving -->
            <div class="upload-div">
                @if (Model.CanDo("SeeRCDocs"))
                {
                    <div>

                        <table>
                            <tr>
                                <th class="withborder">Description</th>
                                <th class="withborder">RC File Name</th>
                                <th class="withborder">Reference</th>
                                <th class="withborder">Publication Year</th>
                                <th class="withborder"> </th>
                            </tr>
                            @using (Html.BeginForm("UpdateRCDocs", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.Hidden("InterventionId", @Model.TheIntervention.Id)

                                foreach (NREPPAdminSite.Models.RCDocument doc in Model.RCDocuments)
                                {
                                    <tr>
                                        <td class="withborder">
                                            @Html.Hidden("hid_" + i.ToString(), @doc.DocId)
                                            @Html.Hidden("isdirty_" + i.ToString(), "false")
                                            @doc.FileDescription
                                        </td>
                                        <td class="withborder">
                                            @doc.RCName
                                            @Html.TextBox("txtRCName_" + i.ToString(), @doc.RCName, new { @class = "hidden" })
                                        </td>
                                        <td class="withborder">
                                            @if (doc.Reference != null && doc.Reference != string.Empty)
                                            {
                                                @Html.ActionLink(@doc.Reference, "GetFile", "Admin", new { FileId = doc.DocId }, null);
                                            }
                                            else
                                            {
                                                <label>@doc.Reference</label>
                                            }
                                            @Html.TextArea("txtRef_" + i.ToString(), @doc.Reference, new { @class = "hidden" })
                                        </td>
                                        <td class="withborder">
                                            @doc.PubYear
                                            @Html.TextBox("txtPubYear_" + i.ToString(), @doc.PubYear, new { @class = "hidden" })
                                        </td>
                                        <td class="withborder">
                                            <button name="btnEdit" onclick="setEdit(@i); return false;">Edit</button>
                                            <button name="cancel_@i" class="hidden" onclick="clearEdit(@i); return false;">Cancel</button>
                                            <input type="submit" value="Save" class="hidden" />
                                        </td>
                                    </tr>
                                            i++;
                                }
                            }
                        </table>
                        @using (Html.BeginForm("UploadFull", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(m => m.TheIntervention.Id);
                            @Html.HiddenFor(m => m.TheIntervention.SubmitterId);
                            @Html.HiddenFor(m => m.TheIntervention.StatusId);
                            @Html.HiddenFor(m => m.TheIntervention.ProgramType);

                            <span style="font-size: large; font-weight: bold;">Upload a File: </span>
                            <input type="file" name="RCUploadFile" /><br />
                            <span>Document Title: </span>
                            <input type="text" name="FileDescription" />

                            @Html.DropDownList("docTypeDD", DocTypez);<br /><br />

                            <input type="submit" value="Attach" />
                            <input type="checkbox" />
                            <span>from Lit Search</span>
                        }

                    </div>
                }
                else
                {
                    <table style="border: 1px solid;">
                        <tr>
                            <!-- Header -->
                            <th class="withborder" style="text-align: center;">Title</th>
                            <th class="withborder" style="text-align: center;">Description</th>
                            <th class="withborder" style="text-align: center;">Type</th>
                            <th class="withborder" style="text-align: center;">&nbsp;</th>
                        </tr>
                        @foreach (NREPPAdminSite.Models.InterventionDoc doc in Model.Documents)
                        {
                            <tr>
                                <td class="withborder">@Html.ActionLink(@doc.Title, "GetFile", "Admin", new { FileId = doc.DocId }, null)</td>
                                <td class="withborder">@doc.FileDescription</td>
                                <td class="withborder">@doc.DocumentTypeName</td>
                                <td class="withborder">@Html.ActionLink("Delete", "DeleteDocument", new { InvId = Model.TheIntervention.Id, DocId = doc.DocId })</td>
                            </tr>
                        }
                    </table>
                }

                @using (Html.BeginForm("Upload", "Program", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.HiddenFor(m => m.TheIntervention.Id);
                    @Html.HiddenFor(m => m.TheIntervention.SubmitterId);
                    @Html.HiddenFor(m => m.TheIntervention.StatusId);
                    @Html.HiddenFor(m => m.TheIntervention.ProgramType);



                                                                   if (Model.TheIntervention.StatusId == 1 && Model.CanDo("UploadDocs"))
                                                                   {
                                                                    <p>
                                                                        You may now upload key documents relevant to the review of your program. This includes  program evaluation (journal articles, evaluation reports), , dissemination materials, and other supporting documents.
                                                                    </p>
                                                                    <ul>
                                                                        <li><u>Program evaluation</u> materials include studies using an experimental or quasi-experimental design, with a comparison or control group (treatment as usual or no treatment, but not an alternative treatment) designed to assess the impact of the program on key outcomes.</li>
                                                                        <li><u>Dissemination materials</u>, though no longer required, are encouraged. These include manuals, curricula, quality assurance materials, training materials, activity props, and such. You may upload documents electronically. Note: You will have the option to list materials that cannot be submitted electronically.</li>
                                                                        <li><u>Other supporting</u> documents could include a more detailed description of your program, its conceptual framework or logic model, materials related to the reliability and validity of your measures, etc.</li>
                                                                    </ul>

                                                                    <span style="font-size: large; font-weight: bold;">Upload a File: </span><input type="file" name="UploadedFile" /> <br />
                                                                    <span>Document Title: </span><input type="text" name="FileTitle" />
                                                                    <span>Description:</span><br />
                                                                    <textarea name="FileDescription"></textarea>
                                                                    @Html.DropDownList("docTypeDD", DocTypez);
                    <br /><br />
                    <input type="submit" value="Attach" /> <input type="checkbox" /> <span>from Lit Search</span>
                                                                   }
                }
            </div>
        }
        else
        {
            <div>
                You may upload files after initially saving
            </div>
        }

        @{
            List<SelectListItem> DestinationOpts = new List<SelectListItem>();

            foreach (NREPPAdminSite.Models.Destination dest in Model.TheDestinations)
            {
                DestinationOpts.Add(new SelectListItem() { Text = dest.UserName, Value = dest.UserId.ToString() + "," + dest.StatusId.ToString() });
            }
        }
        <div class="submitDiv">
            Please submit your completed program.

            @using (Html.BeginForm("Submit", "Program", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.TheIntervention.Id);
                @Html.HiddenFor(m => m.TheIntervention.SubmitterId);
                @Html.HiddenFor(m => m.TheIntervention.StatusId);
                @Html.HiddenFor(m => m.TheIntervention.ProgramType);
                @Html.HiddenFor(m => m.TheIntervention.Title)
                @Html.HiddenFor(m => m.TheIntervention.FromLitSearch)
                @Html.HiddenFor(m => m.TheIntervention.FullDescription)
                @Html.HiddenFor(m => m.TheIntervention.SubmitterId)
                @Html.HiddenFor(m => m.TheIntervention.UpdatedDate)
                @Html.HiddenFor(m => m.TheIntervention.Acronym)


                if (Model.TheIntervention.StatusId > 1)
                {
                    @Html.HiddenFor(m => m.TheIntervention.PreScreenMask, new { Id = "preScreenAns" });

                                                                                                      /*foreach (NREPPAdminSite.Models.MaskValue mask in Model.PreScreen)
                                                                                                      {
                                                                                                          bool isChecked = mask.Selected;
                                                                                                          if (Model.TheIntervention.StatusId == 2) {
                                                                                                              @Html.CheckBox(mask.Name, isChecked, new { Value = Math.Pow(2, mask.Value), @class = "preScreenMask"}) @mask.Name <br />
                                                                                                          }
                                                                                                          else { @Html.CheckBox(mask.Name, isChecked, new { Value = Math.Pow(2, mask.Value), @class = "preScreenMask", disabled = "disabled" }) @mask.Name <br /> }
                                                                                                      }*/

                                                                                                      for (i = 0; i < Model.PreScreen.Count; i++)
                                                                                                      {
                                                                                                          bool isChecked = Model.PreScreen[i].Selected;
                                                                                                          if (Model.TheIntervention.StatusId == 2)
                                                                                                          {
                                                                                                            @Html.CheckBox(Model.PreScreen[i].Name, isChecked, new { Value = Math.Pow(2, Model.PreScreen[i].Value), @class = "preScreenMask" }) @Model.PreScreen[i].Name
                                                                                                              if (Model.UserPreScreen[i].Selected)
                                                                                                              { <span>User Selected</span>}

                                                                                                            <br />
                                                                                                          }
                                                                                                          else
                                                                                                          { @Html.CheckBox(Model.PreScreen[i].Name, isChecked, new { Value = Math.Pow(2, Model.PreScreen[i].Value), @class = "preScreenMask", disabled = "disabled" }) @Model.PreScreen[i].Name
                                                                                                              if (Model.UserPreScreen[i].Selected)
                                                                                                              { <span>User Selected</span>}
                                                                                                            <br />
                                                                                                          }
                                                                                                      }

                                                                                                      if (Model.TheIntervention.StatusId == 2)
                                                                                                      {
                                                                                                        @Html.DropDownList("selDest", DestinationOpts)
                                                                                                      }

                }
                else
                {
                    @Html.Hidden("destStatus", 2)
                }

                if (Model.TheIntervention.StatusId < 3 && Model.Documents.Count > 0)
                {
                    <input type="submit" value="Submit" />
                }
            }

        </div>
    </div>
</div>
