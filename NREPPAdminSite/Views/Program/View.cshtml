@using Microsoft.AspNet.Identity
@model NREPPAdminSite.Models.IntervPageModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var NumDocs = Model.Documents.Count;
    ViewBag.Title = "Viewing a Program";
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("/Scripts/programview.js")"></script>
}

<div class="page-wrapper">

<h2>Viewing @Model.TheIntervention.Title</h2>
<h4>Submitted by @Model.TheIntervention.Submitter</h4>
<label>@Model.TheIntervention.Status</label><br />

<div id="menubar">
	<p>@Html.ActionLink("Assign Literature Reviewer & Review Coordinator", "Assignment", new { InvId = Model.TheIntervention.Id })</p>
  <p>@Html.ActionLink("Screen this Intervention", "Screen", new { InvId = Model.TheIntervention.Id })</p>
    <p>@Html.ActionLink("Assign Reviewers", "AssignReviewers", new { InvId = Model.TheIntervention.Id })</p>
  <p><a href="#">Submission Part B</a></p>
</div>

<div>
    <div>

        @{
            List<SelectListItem> DocTypez = new List<SelectListItem>();

            foreach (NREPPAdminSite.Models.Answer ans in Model.DocumentType)
            {
                DocTypez.Add(new SelectListItem() { Text = ans.ShortAnswer, Value = ans.AnswerId.ToString() });
            }
        }
    </div>

    @{
        //string formContentClass = Model.TheIntervention.Id > 0 ? "formContent" : "formContent hidden";
        int i = 0;
    }

    <div class="formContent">

            <div class="mainForm">
                @using (Html.BeginForm("Edit", "Program"))
                {
                    @Html.HiddenFor(m => m.TheIntervention.Id);
                    @Html.HiddenFor(m => m.TheIntervention.SubmitterId);
                    @Html.HiddenFor(m => m.TheIntervention.StatusId);
                    @Html.HiddenFor(m => m.TheIntervention.ProgramType, new { Id = "programType" });
                    @Html.HiddenFor(m => m.TheIntervention.UserPreScreenMask, new { Id = "userPreScreenAns" })

                    @Html.LabelFor(m => m.TheIntervention.Title, new { style = "margin-right: 5px;" });
                    @Html.TextBoxFor(m => m.TheIntervention.Title).DisableIf(() => Model.CanDo("EditBaseSubmission") == false) <br />

                    @Html.LabelFor(m => m.TheIntervention.Acronym, new { style = "margin-right: 5px;" });
                    @Html.TextBoxFor(m => m.TheIntervention.Acronym).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)
                    <br />

                    @Html.LabelFor(m => m.TheIntervention.FullDescription);
                    <br />
                    @Html.TextAreaFor(m => m.TheIntervention.FullDescription, new { cols = "150", rows = "5" }).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)<br /><br />

                    foreach (NREPPAdminSite.Models.MaskValue mask in Model.ProgramType)
                    {
                        bool isChecked = mask.Selected;
                        @Html.CheckBox(mask.Name, isChecked, new { Value = Math.Pow(2, mask.Value), @class = "programMask" }).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)  @mask.Name <br />
                    }
                    <br />

                    if (Model.CanDo("EditBaseSubmission"))
                    {
                        <input type="submit" value="Update" class="btn btn-primary" /><br /><br />
                    }
                }
            </div>



    <div class="upload-div">
        @if (Model.CanDo("SeeRCDocs"))
        {
            <div>

                <table>
                    <tr>
                        <th class="withborder">Description</th>
                        <th class="withborder">RC File Name</th>
                        <th class="withborder">Reference</th>
                        <th class="withborder">Publication Year</th>
                        <th class="withborder"> </th>
                    </tr>
                    @using (Html.BeginForm("UpdateRCDocs", "Program", FormMethod.Post, new {enctype = "multipart/form-data"}))
                    {
                        @Html.Hidden("InterventionId", @Model.TheIntervention.Id)

                        foreach (NREPPAdminSite.Models.RCDocument doc in Model.RCDocuments)
                        {
                            <tr>
                                <td class="withborder">
                                    @Html.Hidden("hid_" + i.ToString(), @doc.DocId)
                                    @Html.Hidden("isdirty_" + i.ToString(), "false")
                                    @doc.FileDescription
                                </td>
                                <td class="withborder">
                                    @doc.RCName
                                    @Html.TextBox("txtRCName_" + i.ToString(), @doc.RCName, new {@class = "hidden"})
                                </td>
                                <td class="withborder">
                                    @if (doc.Reference != null && doc.Reference != string.Empty)
                                    {
                                        @Html.ActionLink(@doc.Reference, "GetFile", "Admin", new {FileId = doc.DocId}, null)
                                        ;
                                    }
                                    else
                                    {
                                        <label>@doc.Reference</label>
                                    }
                                    @Html.TextArea("txtRef_" + i.ToString(), @doc.Reference, new {@class = "hidden"})
                                </td>
                                <td class="withborder">
                                    @doc.PubYear
                                    @Html.TextBox("txtPubYear_" + i.ToString(), @doc.PubYear, new {@class = "hidden"})
                                </td>
                                <td>

                                </td>
                                <td class="withborder">
                                    <button name="btnEdit" onclick=" setEdit(@i); return false;">Edit</button>
                                    <button name="cancel_@i" class="hidden" onclick="clearEdit(@i); return false;">Cancel</button>
                                    <input type="submit" value="Save" class="hidden"/>
                                    <ul style="list-style-type: none;">
                                        <li>@Html.RadioButton("rdoSeeThis_" + i.ToString(), 0)</li>
                                        <li>@Html.RadioButton("rdoSeeThis_" + i.ToString(), 1) Review This</li>
                                        <li>@Html.RadioButton("rdoSeeThis_" + i.ToString(), 2) Ignore This</li>
                                    </ul>
                                </td>
                            </tr>
                            i++;
                        }
                    }
                </table>
                @using (Html.BeginForm("UploadFull", "Program", FormMethod.Post, new {enctype = "multipart/form-data"}))
                {
                    @Html.HiddenFor(m => m.TheIntervention.Id)
                    ;
                    @Html.HiddenFor(m => m.TheIntervention.SubmitterId)
                    ;
                    @Html.HiddenFor(m => m.TheIntervention.StatusId)
                    ;
                    @Html.HiddenFor(m => m.TheIntervention.ProgramType)
                    ;

                    <span style="font-size: large; font-weight: bold;">Upload a File: </span>
                    <input type="file" name="RCUploadFile"/><br/>
                    <span>Document Title: </span>
                    <input type="text" name="FileDescription"/>

                    if (Model.CanDo("CanLitReview"))
                    {
                        <span>from Lit Search</span><br/><br/>
                    }

                    @Html.DropDownList("docTypeDD", DocTypez)
                    ;
                    <input type="checkbox"/>

                    <input type="submit" value="Attach"/>
                }

            </div>
        }
        else
        {
            <table style="border: 1px solid;">
                <tr>
                    <!-- Header -->
                    <th class="withborder" style="text-align: center;">Title</th>
                    <th class="withborder" style="text-align: center;">Description</th>
                    <th class="withborder" style="text-align: center;">Type</th>
                    <th class="withborder" style="text-align: center;">Actions</th>
                </tr>
                @foreach (NREPPAdminSite.Models.InterventionDoc doc in Model.Documents)
                {
                    <tr>
                        <td class="withborder">@Html.ActionLink(@doc.Title, "GetFile", "Admin", new {FileId = doc.DocId}, null)</td>
                        <td class="withborder">@doc.FileDescription</td>
                        <td class="withborder">@doc.DocumentTypeName</td>
                        <td class="withborder">@Html.ActionLink("Delete", "DeleteDocument", new {InvId = Model.TheIntervention.Id, DocId = doc.DocId})</td>
                    </tr>
                }
            </table>
        }
    </div>
    <br/><br />


    <div class="col-sm-6">
        <h4>NREPP Minimum Criteria</h4>
        @foreach (NREPPAdminSite.Models.MaskValue mask in Model.UserPreScreen)
        {
            bool isChecked = mask.Selected;
            string maskString = string.Format("{0}. {1}", mask.Value, mask.Name);

            if (mask.Value > 2)
            {
                <span class="preQuestion_@mask.Value.ToString()">
                    <span>@maskString</span>
                    <br />@Html.RadioButton(mask.Name, Math.Pow(2, mask.Value), isChecked, new {@class = "userPreScreenMask"}).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)<span>&nbsp;&nbsp;Yes</span>
                    @Html.RadioButton(mask.Name, 0, !isChecked, new {@class = "userPreScreenMask"}).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)<span>&nbsp;&nbsp;No.</span><br />
                </span>
            }
            else
            {
                <span class="preQuestion_@mask.Value.ToString()">
                    <span>@maskString</span>
                    <br />@Html.RadioButton(mask.Name, Math.Pow(2, mask.Value), isChecked, new {@class = "userPreScreenMask"}).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)<span>&nbsp;&nbsp;Yes</span>
                    @Html.RadioButton(mask.Name, 0, !isChecked, new {@class = "userPreScreenMask"}).DisableIf(() => Model.CanDo("EditBaseSubmission") == false)<span>&nbsp;&nbsp;No.</span><br />
                </span>
            }

        }
    </div>
        
        @if (Model.TheIntervention.SubmitterId != User.Identity.GetUserId())
        {
            <br /><br />
            <div class="submitDiv">
                <h4>Pre-Screening Verification</h4>
                @using (Html.BeginForm("Edit", "Program", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.TheIntervention.Id)
                    @Html.HiddenFor(m => m.TheIntervention.SubmitterId)
                    @Html.HiddenFor(m => m.TheIntervention.StatusId)
                    @Html.HiddenFor(m => m.TheIntervention.ProgramType)
                    @Html.HiddenFor(m => m.TheIntervention.Title)
                    @Html.HiddenFor(m => m.TheIntervention.FromLitSearch)
                    @Html.HiddenFor(m => m.TheIntervention.FullDescription)
                    @Html.HiddenFor(m => m.TheIntervention.SubmitterId)
                    @Html.HiddenFor(m => m.TheIntervention.UpdatedDate)
                    @Html.HiddenFor(m => m.TheIntervention.Acronym)
                    @Html.HiddenFor(m => m.TheIntervention.UserPreScreenMask)

                    if (Model.TheIntervention.StatusId > 1)
                    {
                        @Html.HiddenFor(m => m.TheIntervention.PreScreenMask, new {Id = "preScreenAns"})

                        for (i = 0; i < Model.PreScreen.Count; i++)
                        {
                            bool isChecked = Model.PreScreen[i].Selected;

                            //@Html.CheckBox(Model.PreScreen[i].Name, isChecked, new { Value = Math.Pow(2, Model.PreScreen[i].Value), @class = "preScreenMask" }) @Model.PreScreen[i].Name
                            <span class="preQuestion_@Model.PreScreen[i].Value.ToString()">

                                <span>@(i+1). @Model.PreScreen[i].Name</span> @Html.RadioButton("prescreen_" + @i.ToString(), Math.Pow(2, Model.PreScreen[i].Value), isChecked, new {@class = "preScreenMask"}).DisableIf(() => Model.CanDo("EditBaseSubmission") == true) <span>Yes</span>
                                @Html.RadioButton("prescreen_" + @i.ToString(), 0, !isChecked, new {@class = "preScreenMask"}).DisableIf(() => Model.CanDo("EditBaseSubmission") == true)<span>No.</span><br />
                            </span>
                        }
                    }
                    
                    <br/>

                    @Html.CheckBoxFor(m => m.TheIntervention.LitReviewDone).DisableIf(() => Model.CanDo("CanLitReview") == false)
                    <span>Literature Review Completed</span>
                    <br/>
                    <br/>

                    if (Model.TheIntervention.Status == "Pre-Screening")
                    { 
                        <span>Assign to: </span> @Html.DropDownList("Users", ViewBag.Users as SelectList)
                        <br />
                        <br/>

                        <div class="options btn-group">
                            @if (Model.CanDo("CanLitReview"))
                            {
                                <button class="btn" type="submit" name="command" value="Save">Save</button>
                            }
                            <button class="btn" type="submit" name="command" value="reject">Prescreened – rejected</button>
                            <button class="btn btn-primary" name="command" type="submit" value="assign">Ready for Assignment</button>
                        </div>
                    }
                }
            </div>
        }

    </div>
  </div>
</div>

